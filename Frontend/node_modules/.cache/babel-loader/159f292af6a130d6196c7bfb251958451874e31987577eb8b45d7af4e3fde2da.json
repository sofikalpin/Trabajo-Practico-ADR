{"ast":null,"code":"var _jsxFileName = \"/Users/sofia-kalpin/Documents/Facu/ADR/Frontend/inmobiliaria-frontend/src/components/PropiedadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3000/propiedades'; // Asegúrate que coincida con el puerto de tu backend\n\nfunction PropiedadForm({\n  propiedad,\n  onSuccess,\n  onCancel\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    titulo: '',\n    descripcion: '',\n    direccion: '',\n    precio: '',\n    tipo: '',\n    habitaciones: '',\n    banos: '',\n    metrosCuadrados: '',\n    disponible: true\n  });\n  const [imagenArchivo, setImagenArchivo] = useState(null); // Estado para el archivo de imagen a subir\n  const [imagenPreview, setImagenPreview] = useState(''); // Estado para la previsualización de la imagen\n  const [error, setError] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  useEffect(() => {\n    if (propiedad) {\n      // Modo edición: Carga los datos de la propiedad existente\n      setFormData({\n        titulo: propiedad.titulo || '',\n        descripcion: propiedad.descripcion || '',\n        direccion: propiedad.direccion || '',\n        // Convertir números a string para los inputs (importante para HTML input type=\"number\")\n        precio: propiedad.precio !== undefined ? String(propiedad.precio) : '',\n        tipo: propiedad.tipo || '',\n        habitaciones: propiedad.habitaciones !== undefined ? String(propiedad.habitaciones) : '',\n        banos: propiedad.banos !== undefined ? String(propiedad.banos) : '',\n        metrosCuadrados: propiedad.metrosCuadrados !== undefined ? String(propiedad.metrosCuadrados) : '',\n        disponible: propiedad.disponible !== undefined ? propiedad.disponible : true\n      });\n      // Si la propiedad tiene una imagen, la cargamos para previsualización\n      if (propiedad.imagenes && propiedad.imagenes.length > 0) {\n        setImagenPreview(`http://localhost:3000${propiedad.imagenes[0]}`);\n      } else {\n        setImagenPreview(''); // Limpiar previsualización si no hay imagen\n      }\n      setImagenArchivo(null); // Limpiar archivo seleccionado al entrar en modo edición\n    } else {\n      // Modo nueva propiedad: Reinicia el formulario\n      setFormData({\n        titulo: '',\n        descripcion: '',\n        direccion: '',\n        precio: '',\n        tipo: '',\n        habitaciones: '',\n        banos: '',\n        metrosCuadrados: '',\n        disponible: true\n      });\n      setImagenArchivo(null);\n      setImagenPreview('');\n    }\n    setError(null); // Limpia cualquier error previo al cargar/resetear el formulario\n  }, [propiedad]);\n\n  // Maneja los cambios en los campos de texto e inputs numéricos/checkbox\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n    // Limpia el error si el usuario empieza a escribir después de un error de validación\n    if (error) setError(null);\n  };\n\n  // Manejador para el input de tipo 'file' (subida de imagen)\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImagenArchivo(file);\n      setImagenPreview(URL.createObjectURL(file)); // Crea una URL de objeto temporal para previsualizar\n      setError(null); // Limpia errores si se selecciona un archivo\n    } else {\n      setImagenArchivo(null);\n      setImagenPreview('');\n    }\n  };\n\n  // Valida los campos del formulario antes de enviar (validación del lado del cliente)\n  const validateForm = () => {\n    const requiredFields = ['titulo', 'descripcion', 'direccion', 'precio', 'tipo', 'habitaciones', 'banos', 'metrosCuadrados'];\n    for (let field of requiredFields) {\n      // Usamos `!formData[field]` y también `formData[field].toString().trim() === ''`\n      // para atrapar valores nulos, indefinidos o cadenas vacías.\n      if (!formData[field] || formData[field].toString().trim() === '') {\n        return `El campo \"${field}\" es requerido.`;\n      }\n    }\n\n    // Validaciones numéricas específicas\n    const precio = parseFloat(formData.precio);\n    if (isNaN(precio) || precio <= 0) {\n      return 'El precio debe ser un número válido mayor a 0.';\n    }\n    const habitaciones = parseInt(formData.habitaciones);\n    if (isNaN(habitaciones) || habitaciones < 0) {\n      return 'El número de habitaciones debe ser un número entero no negativo.';\n    }\n    const banos = parseInt(formData.banos);\n    if (isNaN(banos) || banos < 0) {\n      return 'El número de baños debe ser un número entero no negativo.';\n    }\n    const metrosCuadrados = parseFloat(formData.metrosCuadrados);\n    if (isNaN(metrosCuadrados) || metrosCuadrados <= 0) {\n      return 'Los metros cuadrados deben ser un número válido mayor a 0.';\n    }\n\n    // En modo creación de una NUEVA propiedad, la imagen es obligatoria\n    if (!propiedad && !imagenArchivo) {\n      return 'Debes subir una imagen para la nueva propiedad.';\n    }\n    return null; // No hay errores de validación\n  };\n\n  // Maneja el envío del formulario (crear o actualizar propiedad)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null); // Limpiar errores previos\n\n    // Ejecutar validación del lado del cliente\n    const validationError = validateForm();\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n    setIsSubmitting(true); // Indicar que el formulario se está enviando\n\n    // Usa FormData para enviar archivos junto con datos de texto al backend\n    const formDataToSend = new FormData();\n\n    // Añade **todos** los campos del estado `formData` al objeto `FormDataToSend`.\n    // Es crucial que todos los campos requeridos por Mongoose estén aquí.\n    for (const key in formData) {\n      // FormData convierte automáticamente los valores a strings,\n      // incluyendo booleanos ('true' o 'false').\n      formDataToSend.append(key, formData[key]);\n    }\n\n    // Lógica para el campo 'imagen' (archivo real) y 'imagenes' (URL existente)\n    if (imagenArchivo) {\n      // Si se seleccionó un nuevo archivo, lo adjuntamos como 'imagen'\n      formDataToSend.append('imagen', imagenArchivo);\n    } else if (propiedad && propiedad.imagenes && propiedad.imagenes.length > 0) {\n      // Si estamos editando y NO se seleccionó un nuevo archivo,\n      // pero la propiedad ya tiene una imagen, reenviamos su URL existente\n      // en el campo 'imagenes' para que el backend la conserve.\n      // Asumimos una única imagen principal para simplificar.\n      formDataToSend.append('imagenes', propiedad.imagenes[0]);\n    } else if (propiedad && (!propiedad.imagenes || propiedad.imagenes.length === 0) && !imagenArchivo) {\n      // Caso de edición: si no hay imagen existente y no se sube una nueva,\n      // o si la tenía y se \"borró\" (no se seleccionó una nueva y no hay URL existente),\n      // enviamos un string vacío para el campo 'imagenes' para que el backend lo maneje.\n      formDataToSend.append('imagenes', '');\n    }\n    // Si la propiedad es nueva y no tiene imagenArchivo, la validación ya lo habrá atrapado.\n\n    // --- DEPURACIÓN: Imprime el contenido de FormData antes de enviar ---\n    console.log('--- Contenido de FormData antes de enviar ---');\n    for (let pair of formDataToSend.entries()) {\n      console.log(`${pair[0]}: ${pair[1]}`);\n    }\n    console.log('-------------------------------------------');\n    try {\n      if (propiedad) {\n        // Petición PUT para actualizar una propiedad existente\n        await axios.put(`${API_URL}/${propiedad._id}`, formDataToSend, {\n          headers: {\n            'Content-Type': 'multipart/form-data' // Indispensable para enviar FormData\n          }\n        });\n      } else {\n        // Petición POST para crear una nueva propiedad\n        await axios.post(API_URL, formDataToSend, {\n          headers: {\n            'Content-Type': 'multipart/form-data' // Indispensable para enviar FormData\n          }\n        });\n      }\n      onSuccess(); // Llama a la función de éxito (ej. para refrescar la lista)\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      console.error('Error al enviar el formulario (frontend):', err.response ? err.response.data : err.message);\n      // Extraemos el mensaje de error del backend para mostrarlo al usuario\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || (// Captura el error de validación de Mongoose formateado por el backend\n      (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Ocurrió un error inesperado. Por favor, inténtalo de nuevo.');\n    } finally {\n      setIsSubmitting(false); // Restablecer el estado de envío\n    }\n  };\n\n  // Opciones predefinidas para el tipo de propiedad (igual que en tu modelo)\n  const tiposPropiedad = ['Casa', 'Departamento', 'Oficina', 'Local Comercial', 'Terreno', 'Bodega', 'Penthouse', 'Duplex', 'Estudio', 'Nave Industrial'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"propiedad-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"form-title\",\n        children: propiedad ? 'Editar Propiedad' : 'Nueva Propiedad'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-subtitle\",\n        children: propiedad ? 'Modifica los datos de la propiedad seleccionada.' : 'Completa la información para registrar una nueva propiedad.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-text\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"propiedad-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"section-title\",\n            children: \"Informaci\\xF3n B\\xE1sica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"T\\xEDtulo \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required-indicator\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"titulo\",\n              value: formData.titulo,\n              onChange: handleChange,\n              required: true,\n              className: \"form-input\",\n              placeholder: \"Ej: Casa moderna en zona residencial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"Descripci\\xF3n \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required-indicator\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"descripcion\",\n              value: formData.descripcion,\n              onChange: handleChange,\n              required: true,\n              className: \"form-textarea\",\n              placeholder: \"Describe las caracter\\xEDsticas principales de la propiedad...\",\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"Direcci\\xF3n \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required-indicator\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"direccion\",\n              value: formData.direccion,\n              onChange: handleChange,\n              required: true,\n              className: \"form-input\",\n              placeholder: \"Ej: Av. Principal 123, Colonia Centro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"Tipo \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required-indicator\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"tipo\",\n              value: formData.tipo,\n              onChange: handleChange,\n              required: true,\n              className: \"form-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Seleccionar tipo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), tiposPropiedad.map(tipo => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: tipo,\n                children: tipo\n              }, tipo, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"section-title\",\n            children: \"Detalles Num\\xE9ricos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"Precio \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required-indicator\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"precio\",\n              value: formData.precio,\n              onChange: handleChange,\n              required: true,\n              className: \"form-input\",\n              placeholder: \"0.00\",\n              min: \"0\",\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field half-width\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: [\"Habitaciones \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-indicator\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"habitaciones\",\n                value: formData.habitaciones,\n                onChange: handleChange,\n                required: true,\n                className: \"form-input\",\n                placeholder: \"0\",\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field half-width\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: [\"Ba\\xF1os \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-indicator\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"banos\",\n                value: formData.banos,\n                onChange: handleChange,\n                required: true,\n                className: \"form-input\",\n                placeholder: \"0\",\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: [\"Metros Cuadrados \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required-indicator\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"metrosCuadrados\",\n              value: formData.metrosCuadrados,\n              onChange: handleChange,\n              required: true,\n              className: \"form-input\",\n              placeholder: \"0.00\",\n              min: \"0\",\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-field\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"disponible\",\n                checked: formData.disponible,\n                onChange: handleChange,\n                className: \"checkbox-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkbox-text\",\n                children: \"Propiedad Disponible\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section full-width\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"section-title\",\n          children: \"Imagen de la Propiedad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: [\"Seleccionar Imagen \", propiedad ? '' : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"required-indicator\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"imagen\" // Este nombre debe coincidir con el campo que Multer espera ('imagen')\n            ,\n            accept: \"image/*\" // Solo permite la selección de archivos de imagen\n            ,\n            onChange: handleImageChange,\n            className: \"form-input-file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), imagenPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Previsualizaci\\xF3n:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imagenPreview,\n              alt: \"Previsualizaci\\xF3n\",\n              className: \"image-preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"field-hint\",\n            children: propiedad ? 'Sube una nueva imagen para reemplazar la actual, o déjalo vacío para mantenerla.' : 'Sube una imagen para la propiedad (requerido para propiedades nuevas).'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onCancel,\n          className: \"btn-secondary\",\n          disabled: isSubmitting,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `btn-primary ${isSubmitting ? 'loading' : ''}`,\n          disabled: isSubmitting,\n          children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), \"Guardando...\"]\n          }, void 0, true) : propiedad ? 'Actualizar Propiedad' : 'Guardar Propiedad'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(PropiedadForm, \"MrTpHymuwA0wWRlI+HLLjnDRYD0=\");\n_c = PropiedadForm;\nexport default PropiedadForm;\nvar _c;\n$RefreshReg$(_c, \"PropiedadForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","PropiedadForm","propiedad","onSuccess","onCancel","_s","formData","setFormData","titulo","descripcion","direccion","precio","tipo","habitaciones","banos","metrosCuadrados","disponible","imagenArchivo","setImagenArchivo","imagenPreview","setImagenPreview","error","setError","isSubmitting","setIsSubmitting","undefined","String","imagenes","length","handleChange","e","name","value","type","checked","target","prevData","handleImageChange","file","files","URL","createObjectURL","validateForm","requiredFields","field","toString","trim","parseFloat","isNaN","parseInt","handleSubmit","preventDefault","validationError","formDataToSend","FormData","key","append","console","log","pair","entries","put","_id","headers","post","err","_err$response","_err$response$data","_err$response2","_err$response2$data","response","data","message","tiposPropiedad","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","placeholder","rows","map","min","step","accept","src","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sofia-kalpin/Documents/Facu/ADR/Frontend/inmobiliaria-frontend/src/components/PropiedadForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/propiedades'; // Asegúrate que coincida con el puerto de tu backend\n\nfunction PropiedadForm({ propiedad, onSuccess, onCancel }) {\n  const [formData, setFormData] = useState({\n    titulo: '',\n    descripcion: '',\n    direccion: '',\n    precio: '',\n    tipo: '',\n    habitaciones: '',\n    banos: '',\n    metrosCuadrados: '',\n    disponible: true,\n  });\n  const [imagenArchivo, setImagenArchivo] = useState(null); // Estado para el archivo de imagen a subir\n  const [imagenPreview, setImagenPreview] = useState(''); // Estado para la previsualización de la imagen\n  const [error, setError] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (propiedad) {\n      // Modo edición: Carga los datos de la propiedad existente\n      setFormData({\n        titulo: propiedad.titulo || '',\n        descripcion: propiedad.descripcion || '',\n        direccion: propiedad.direccion || '',\n        // Convertir números a string para los inputs (importante para HTML input type=\"number\")\n        precio: propiedad.precio !== undefined ? String(propiedad.precio) : '',\n        tipo: propiedad.tipo || '',\n        habitaciones: propiedad.habitaciones !== undefined ? String(propiedad.habitaciones) : '',\n        banos: propiedad.banos !== undefined ? String(propiedad.banos) : '',\n        metrosCuadrados: propiedad.metrosCuadrados !== undefined ? String(propiedad.metrosCuadrados) : '',\n        disponible: propiedad.disponible !== undefined ? propiedad.disponible : true,\n      });\n      // Si la propiedad tiene una imagen, la cargamos para previsualización\n      if (propiedad.imagenes && propiedad.imagenes.length > 0) {\n        setImagenPreview(`http://localhost:3000${propiedad.imagenes[0]}`);\n      } else {\n        setImagenPreview(''); // Limpiar previsualización si no hay imagen\n      }\n      setImagenArchivo(null); // Limpiar archivo seleccionado al entrar en modo edición\n    } else {\n      // Modo nueva propiedad: Reinicia el formulario\n      setFormData({\n        titulo: '',\n        descripcion: '',\n        direccion: '',\n        precio: '',\n        tipo: '',\n        habitaciones: '',\n        banos: '',\n        metrosCuadrados: '',\n        disponible: true,\n      });\n      setImagenArchivo(null);\n      setImagenPreview('');\n    }\n    setError(null); // Limpia cualquier error previo al cargar/resetear el formulario\n  }, [propiedad]);\n\n  // Maneja los cambios en los campos de texto e inputs numéricos/checkbox\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: type === 'checkbox' ? checked : value,\n    }));\n    // Limpia el error si el usuario empieza a escribir después de un error de validación\n    if (error) setError(null);\n  };\n\n  // Manejador para el input de tipo 'file' (subida de imagen)\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setImagenArchivo(file);\n      setImagenPreview(URL.createObjectURL(file)); // Crea una URL de objeto temporal para previsualizar\n      setError(null); // Limpia errores si se selecciona un archivo\n    } else {\n      setImagenArchivo(null);\n      setImagenPreview('');\n    }\n  };\n\n  // Valida los campos del formulario antes de enviar (validación del lado del cliente)\n  const validateForm = () => {\n    const requiredFields = ['titulo', 'descripcion', 'direccion', 'precio', 'tipo', 'habitaciones', 'banos', 'metrosCuadrados'];\n    for (let field of requiredFields) {\n      // Usamos `!formData[field]` y también `formData[field].toString().trim() === ''`\n      // para atrapar valores nulos, indefinidos o cadenas vacías.\n      if (!formData[field] || formData[field].toString().trim() === '') {\n        return `El campo \"${field}\" es requerido.`;\n      }\n    }\n\n    // Validaciones numéricas específicas\n    const precio = parseFloat(formData.precio);\n    if (isNaN(precio) || precio <= 0) {\n      return 'El precio debe ser un número válido mayor a 0.';\n    }\n\n    const habitaciones = parseInt(formData.habitaciones);\n    if (isNaN(habitaciones) || habitaciones < 0) {\n      return 'El número de habitaciones debe ser un número entero no negativo.';\n    }\n\n    const banos = parseInt(formData.banos);\n    if (isNaN(banos) || banos < 0) {\n      return 'El número de baños debe ser un número entero no negativo.';\n    }\n\n    const metrosCuadrados = parseFloat(formData.metrosCuadrados);\n    if (isNaN(metrosCuadrados) || metrosCuadrados <= 0) {\n      return 'Los metros cuadrados deben ser un número válido mayor a 0.';\n    }\n\n    // En modo creación de una NUEVA propiedad, la imagen es obligatoria\n    if (!propiedad && !imagenArchivo) {\n      return 'Debes subir una imagen para la nueva propiedad.';\n    }\n\n    return null; // No hay errores de validación\n  };\n\n  // Maneja el envío del formulario (crear o actualizar propiedad)\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null); // Limpiar errores previos\n\n    // Ejecutar validación del lado del cliente\n    const validationError = validateForm();\n    if (validationError) {\n      setError(validationError);\n      return;\n    }\n\n    setIsSubmitting(true); // Indicar que el formulario se está enviando\n\n    // Usa FormData para enviar archivos junto con datos de texto al backend\n    const formDataToSend = new FormData();\n\n    // Añade **todos** los campos del estado `formData` al objeto `FormDataToSend`.\n    // Es crucial que todos los campos requeridos por Mongoose estén aquí.\n    for (const key in formData) {\n        // FormData convierte automáticamente los valores a strings,\n        // incluyendo booleanos ('true' o 'false').\n        formDataToSend.append(key, formData[key]);\n    }\n\n    // Lógica para el campo 'imagen' (archivo real) y 'imagenes' (URL existente)\n    if (imagenArchivo) {\n      // Si se seleccionó un nuevo archivo, lo adjuntamos como 'imagen'\n      formDataToSend.append('imagen', imagenArchivo);\n    } else if (propiedad && propiedad.imagenes && propiedad.imagenes.length > 0) {\n      // Si estamos editando y NO se seleccionó un nuevo archivo,\n      // pero la propiedad ya tiene una imagen, reenviamos su URL existente\n      // en el campo 'imagenes' para que el backend la conserve.\n      // Asumimos una única imagen principal para simplificar.\n      formDataToSend.append('imagenes', propiedad.imagenes[0]);\n    } else if (propiedad && (!propiedad.imagenes || propiedad.imagenes.length === 0) && !imagenArchivo) {\n      // Caso de edición: si no hay imagen existente y no se sube una nueva,\n      // o si la tenía y se \"borró\" (no se seleccionó una nueva y no hay URL existente),\n      // enviamos un string vacío para el campo 'imagenes' para que el backend lo maneje.\n      formDataToSend.append('imagenes', '');\n    }\n    // Si la propiedad es nueva y no tiene imagenArchivo, la validación ya lo habrá atrapado.\n\n    // --- DEPURACIÓN: Imprime el contenido de FormData antes de enviar ---\n    console.log('--- Contenido de FormData antes de enviar ---');\n    for (let pair of formDataToSend.entries()) {\n      console.log(`${pair[0]}: ${pair[1]}`);\n    }\n    console.log('-------------------------------------------');\n\n    try {\n      if (propiedad) {\n        // Petición PUT para actualizar una propiedad existente\n        await axios.put(`${API_URL}/${propiedad._id}`, formDataToSend, {\n          headers: {\n            'Content-Type': 'multipart/form-data', // Indispensable para enviar FormData\n          },\n        });\n      } else {\n        // Petición POST para crear una nueva propiedad\n        await axios.post(API_URL, formDataToSend, {\n          headers: {\n            'Content-Type': 'multipart/form-data', // Indispensable para enviar FormData\n          },\n        });\n      }\n      onSuccess(); // Llama a la función de éxito (ej. para refrescar la lista)\n    } catch (err) {\n      console.error('Error al enviar el formulario (frontend):', err.response ? err.response.data : err.message);\n      // Extraemos el mensaje de error del backend para mostrarlo al usuario\n      setError(\n        err.response?.data?.error || // Captura el error de validación de Mongoose formateado por el backend\n        err.response?.data?.message ||\n        'Ocurrió un error inesperado. Por favor, inténtalo de nuevo.'\n      );\n    } finally {\n      setIsSubmitting(false); // Restablecer el estado de envío\n    }\n  };\n\n  // Opciones predefinidas para el tipo de propiedad (igual que en tu modelo)\n  const tiposPropiedad = [\n    'Casa', 'Departamento', 'Oficina', 'Local Comercial',\n    'Terreno', 'Bodega', 'Penthouse', 'Duplex', 'Estudio', 'Nave Industrial'\n  ];\n\n  return (\n    <div className=\"propiedad-form-container\">\n      <div className=\"form-header\">\n        <h3 className=\"form-title\">\n          {propiedad ? 'Editar Propiedad' : 'Nueva Propiedad'}\n        </h3>\n        <p className=\"form-subtitle\">\n          {propiedad\n            ? 'Modifica los datos de la propiedad seleccionada.'\n            : 'Completa la información para registrar una nueva propiedad.'\n          }\n        </p>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">\n          <div className=\"error-icon\">⚠</div>\n          <div className=\"error-text\">{error}</div>\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit} className=\"propiedad-form\">\n        <div className=\"form-grid\">\n          <div className=\"form-section\">\n            <h4 className=\"section-title\">Información Básica</h4>\n\n            <div className=\"form-field\">\n              <label className=\"form-label\">\n                Título <span className=\"required-indicator\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                name=\"titulo\"\n                value={formData.titulo}\n                onChange={handleChange}\n                required\n                className=\"form-input\"\n                placeholder=\"Ej: Casa moderna en zona residencial\"\n              />\n            </div>\n\n            <div className=\"form-field\">\n              <label className=\"form-label\">\n                Descripción <span className=\"required-indicator\">*</span>\n              </label>\n              <textarea\n                name=\"descripcion\"\n                value={formData.descripcion}\n                onChange={handleChange}\n                required\n                className=\"form-textarea\"\n                placeholder=\"Describe las características principales de la propiedad...\"\n                rows={4}\n              />\n            </div>\n\n            <div className=\"form-field\">\n              <label className=\"form-label\">\n                Dirección <span className=\"required-indicator\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                name=\"direccion\"\n                value={formData.direccion}\n                onChange={handleChange}\n                required\n                className=\"form-input\"\n                placeholder=\"Ej: Av. Principal 123, Colonia Centro\"\n              />\n            </div>\n\n            <div className=\"form-field\">\n              <label className=\"form-label\">\n                Tipo <span className=\"required-indicator\">*</span>\n              </label>\n              <select\n                name=\"tipo\"\n                value={formData.tipo}\n                onChange={handleChange}\n                required\n                className=\"form-select\"\n              >\n                <option value=\"\">Seleccionar tipo</option>\n                {tiposPropiedad.map(tipo => (\n                  <option key={tipo} value={tipo}>{tipo}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-section\">\n            <h4 className=\"section-title\">Detalles Numéricos</h4>\n\n            <div className=\"form-field\">\n              <label className=\"form-label\">\n                Precio <span className=\"required-indicator\">*</span>\n              </label>\n              <input\n                type=\"number\"\n                name=\"precio\"\n                value={formData.precio}\n                onChange={handleChange}\n                required\n                className=\"form-input\"\n                placeholder=\"0.00\"\n                min=\"0\"\n                step=\"0.01\"\n              />\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-field half-width\">\n                <label className=\"form-label\">\n                  Habitaciones <span className=\"required-indicator\">*</span>\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"habitaciones\"\n                  value={formData.habitaciones}\n                  onChange={handleChange}\n                  required\n                  className=\"form-input\"\n                  placeholder=\"0\"\n                  min=\"0\"\n                />\n              </div>\n\n              <div className=\"form-field half-width\">\n                <label className=\"form-label\">\n                  Baños <span className=\"required-indicator\">*</span>\n                </label>\n                <input\n                  type=\"number\"\n                  name=\"banos\"\n                  value={formData.banos}\n                  onChange={handleChange}\n                  required\n                  className=\"form-input\"\n                  placeholder=\"0\"\n                  min=\"0\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-field\">\n              <label className=\"form-label\">\n                Metros Cuadrados <span className=\"required-indicator\">*</span>\n              </label>\n              <input\n                type=\"number\"\n                name=\"metrosCuadrados\"\n                value={formData.metrosCuadrados}\n                onChange={handleChange}\n                required\n                className=\"form-input\"\n                placeholder=\"0.00\"\n                min=\"0\"\n                step=\"0.01\"\n              />\n            </div>\n\n            <div className=\"checkbox-field\">\n              <label className=\"checkbox-label\">\n                <input\n                  type=\"checkbox\"\n                  name=\"disponible\"\n                  checked={formData.disponible}\n                  onChange={handleChange}\n                  className=\"checkbox-input\"\n                />\n                <span className=\"checkbox-text\">Propiedad Disponible</span>\n              </label>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-section full-width\">\n          <h4 className=\"section-title\">Imagen de la Propiedad</h4>\n          <div className=\"form-field\">\n            <label className=\"form-label\">\n              Seleccionar Imagen {propiedad ? '' : <span className=\"required-indicator\">*</span>}\n            </label>\n            <input\n              type=\"file\"\n              name=\"imagen\" // Este nombre debe coincidir con el campo que Multer espera ('imagen')\n              accept=\"image/*\" // Solo permite la selección de archivos de imagen\n              onChange={handleImageChange}\n              className=\"form-input-file\"\n            />\n            {imagenPreview && (\n              <div className=\"image-preview-container\">\n                <p>Previsualización:</p>\n                <img src={imagenPreview} alt=\"Previsualización\" className=\"image-preview\" />\n              </div>\n            )}\n            <p className=\"field-hint\">\n              {propiedad ? 'Sube una nueva imagen para reemplazar la actual, o déjalo vacío para mantenerla.' : 'Sube una imagen para la propiedad (requerido para propiedades nuevas).'}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"form-actions\">\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"btn-secondary\"\n            disabled={isSubmitting}\n          >\n            Cancelar\n          </button>\n          <button\n            type=\"submit\"\n            className={`btn-primary ${isSubmitting ? 'loading' : ''}`}\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? (\n              <>\n                <span className=\"loading-spinner\"></span>\n                Guardando...\n              </>\n            ) : (\n              propiedad ? 'Actualizar Propiedad' : 'Guardar Propiedad'\n            )}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default PropiedadForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,OAAO,GAAG,mCAAmC,CAAC,CAAC;;AAErD,SAASC,aAAaA,CAAC;EAAEC,SAAS;EAAEC,SAAS;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC;IACvCe,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,EAAE;IACTC,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,IAAIQ,SAAS,EAAE;MACb;MACAK,WAAW,CAAC;QACVC,MAAM,EAAEN,SAAS,CAACM,MAAM,IAAI,EAAE;QAC9BC,WAAW,EAAEP,SAAS,CAACO,WAAW,IAAI,EAAE;QACxCC,SAAS,EAAER,SAAS,CAACQ,SAAS,IAAI,EAAE;QACpC;QACAC,MAAM,EAAET,SAAS,CAACS,MAAM,KAAKc,SAAS,GAAGC,MAAM,CAACxB,SAAS,CAACS,MAAM,CAAC,GAAG,EAAE;QACtEC,IAAI,EAAEV,SAAS,CAACU,IAAI,IAAI,EAAE;QAC1BC,YAAY,EAAEX,SAAS,CAACW,YAAY,KAAKY,SAAS,GAAGC,MAAM,CAACxB,SAAS,CAACW,YAAY,CAAC,GAAG,EAAE;QACxFC,KAAK,EAAEZ,SAAS,CAACY,KAAK,KAAKW,SAAS,GAAGC,MAAM,CAACxB,SAAS,CAACY,KAAK,CAAC,GAAG,EAAE;QACnEC,eAAe,EAAEb,SAAS,CAACa,eAAe,KAAKU,SAAS,GAAGC,MAAM,CAACxB,SAAS,CAACa,eAAe,CAAC,GAAG,EAAE;QACjGC,UAAU,EAAEd,SAAS,CAACc,UAAU,KAAKS,SAAS,GAAGvB,SAAS,CAACc,UAAU,GAAG;MAC1E,CAAC,CAAC;MACF;MACA,IAAId,SAAS,CAACyB,QAAQ,IAAIzB,SAAS,CAACyB,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;QACvDR,gBAAgB,CAAC,wBAAwBlB,SAAS,CAACyB,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;MACnE,CAAC,MAAM;QACLP,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;MACxB;MACAF,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM;MACL;MACAX,WAAW,CAAC;QACVC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE,EAAE;QACbC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,EAAE;QACRC,YAAY,EAAE,EAAE;QAChBC,KAAK,EAAE,EAAE;QACTC,eAAe,EAAE,EAAE;QACnBC,UAAU,EAAE;MACd,CAAC,CAAC;MACFE,gBAAgB,CAAC,IAAI,CAAC;MACtBE,gBAAgB,CAAC,EAAE,CAAC;IACtB;IACAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,CAACpB,SAAS,CAAC,CAAC;;EAEf;EACA,MAAM2B,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGJ,CAAC,CAACK,MAAM;IAC/C5B,WAAW,CAAE6B,QAAQ,KAAM;MACzB,GAAGA,QAAQ;MACX,CAACL,IAAI,GAAGE,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGF;IAC1C,CAAC,CAAC,CAAC;IACH;IACA,IAAIX,KAAK,EAAEC,QAAQ,CAAC,IAAI,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMe,iBAAiB,GAAIP,CAAC,IAAK;IAC/B,MAAMQ,IAAI,GAAGR,CAAC,CAACK,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAID,IAAI,EAAE;MACRpB,gBAAgB,CAACoB,IAAI,CAAC;MACtBlB,gBAAgB,CAACoB,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7ChB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM;MACLJ,gBAAgB,CAAC,IAAI,CAAC;MACtBE,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMsB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,cAAc,GAAG,CAAC,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAE,cAAc,EAAE,OAAO,EAAE,iBAAiB,CAAC;IAC3H,KAAK,IAAIC,KAAK,IAAID,cAAc,EAAE;MAChC;MACA;MACA,IAAI,CAACrC,QAAQ,CAACsC,KAAK,CAAC,IAAItC,QAAQ,CAACsC,KAAK,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAChE,OAAO,aAAaF,KAAK,iBAAiB;MAC5C;IACF;;IAEA;IACA,MAAMjC,MAAM,GAAGoC,UAAU,CAACzC,QAAQ,CAACK,MAAM,CAAC;IAC1C,IAAIqC,KAAK,CAACrC,MAAM,CAAC,IAAIA,MAAM,IAAI,CAAC,EAAE;MAChC,OAAO,gDAAgD;IACzD;IAEA,MAAME,YAAY,GAAGoC,QAAQ,CAAC3C,QAAQ,CAACO,YAAY,CAAC;IACpD,IAAImC,KAAK,CAACnC,YAAY,CAAC,IAAIA,YAAY,GAAG,CAAC,EAAE;MAC3C,OAAO,kEAAkE;IAC3E;IAEA,MAAMC,KAAK,GAAGmC,QAAQ,CAAC3C,QAAQ,CAACQ,KAAK,CAAC;IACtC,IAAIkC,KAAK,CAAClC,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE;MAC7B,OAAO,2DAA2D;IACpE;IAEA,MAAMC,eAAe,GAAGgC,UAAU,CAACzC,QAAQ,CAACS,eAAe,CAAC;IAC5D,IAAIiC,KAAK,CAACjC,eAAe,CAAC,IAAIA,eAAe,IAAI,CAAC,EAAE;MAClD,OAAO,4DAA4D;IACrE;;IAEA;IACA,IAAI,CAACb,SAAS,IAAI,CAACe,aAAa,EAAE;MAChC,OAAO,iDAAiD;IAC1D;IAEA,OAAO,IAAI,CAAC,CAAC;EACf,CAAC;;EAED;EACA,MAAMiC,YAAY,GAAG,MAAOpB,CAAC,IAAK;IAChCA,CAAC,CAACqB,cAAc,CAAC,CAAC;IAClB7B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhB;IACA,MAAM8B,eAAe,GAAGV,YAAY,CAAC,CAAC;IACtC,IAAIU,eAAe,EAAE;MACnB9B,QAAQ,CAAC8B,eAAe,CAAC;MACzB;IACF;IAEA5B,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEvB;IACA,MAAM6B,cAAc,GAAG,IAAIC,QAAQ,CAAC,CAAC;;IAErC;IACA;IACA,KAAK,MAAMC,GAAG,IAAIjD,QAAQ,EAAE;MACxB;MACA;MACA+C,cAAc,CAACG,MAAM,CAACD,GAAG,EAAEjD,QAAQ,CAACiD,GAAG,CAAC,CAAC;IAC7C;;IAEA;IACA,IAAItC,aAAa,EAAE;MACjB;MACAoC,cAAc,CAACG,MAAM,CAAC,QAAQ,EAAEvC,aAAa,CAAC;IAChD,CAAC,MAAM,IAAIf,SAAS,IAAIA,SAAS,CAACyB,QAAQ,IAAIzB,SAAS,CAACyB,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3E;MACA;MACA;MACA;MACAyB,cAAc,CAACG,MAAM,CAAC,UAAU,EAAEtD,SAAS,CAACyB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,MAAM,IAAIzB,SAAS,KAAK,CAACA,SAAS,CAACyB,QAAQ,IAAIzB,SAAS,CAACyB,QAAQ,CAACC,MAAM,KAAK,CAAC,CAAC,IAAI,CAACX,aAAa,EAAE;MAClG;MACA;MACA;MACAoC,cAAc,CAACG,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;IACvC;IACA;;IAEA;IACAC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC5D,KAAK,IAAIC,IAAI,IAAIN,cAAc,CAACO,OAAO,CAAC,CAAC,EAAE;MACzCH,OAAO,CAACC,GAAG,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC,KAAKA,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;IACvC;IACAF,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAE1D,IAAI;MACF,IAAIxD,SAAS,EAAE;QACb;QACA,MAAMP,KAAK,CAACkE,GAAG,CAAC,GAAG7D,OAAO,IAAIE,SAAS,CAAC4D,GAAG,EAAE,EAAET,cAAc,EAAE;UAC7DU,OAAO,EAAE;YACP,cAAc,EAAE,qBAAqB,CAAE;UACzC;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACA,MAAMpE,KAAK,CAACqE,IAAI,CAAChE,OAAO,EAAEqD,cAAc,EAAE;UACxCU,OAAO,EAAE;YACP,cAAc,EAAE,qBAAqB,CAAE;UACzC;QACF,CAAC,CAAC;MACJ;MACA5D,SAAS,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,OAAO8D,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA,EAAAC,cAAA,EAAAC,mBAAA;MACZZ,OAAO,CAACpC,KAAK,CAAC,2CAA2C,EAAE4C,GAAG,CAACK,QAAQ,GAAGL,GAAG,CAACK,QAAQ,CAACC,IAAI,GAAGN,GAAG,CAACO,OAAO,CAAC;MAC1G;MACAlD,QAAQ,CACN,EAAA4C,aAAA,GAAAD,GAAG,CAACK,QAAQ,cAAAJ,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcK,IAAI,cAAAJ,kBAAA,uBAAlBA,kBAAA,CAAoB9C,KAAK,MAAI;MAAA,CAAA+C,cAAA,GAC7BH,GAAG,CAACK,QAAQ,cAAAF,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcG,IAAI,cAAAF,mBAAA,uBAAlBA,mBAAA,CAAoBG,OAAO,KAC3B,6DACF,CAAC;IACH,CAAC,SAAS;MACRhD,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;;EAED;EACA,MAAMiD,cAAc,GAAG,CACrB,MAAM,EAAE,cAAc,EAAE,SAAS,EAAE,iBAAiB,EACpD,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,iBAAiB,CACzE;EAED,oBACE5E,OAAA;IAAK6E,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvC9E,OAAA;MAAK6E,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B9E,OAAA;QAAI6E,SAAS,EAAC,YAAY;QAAAC,QAAA,EACvBzE,SAAS,GAAG,kBAAkB,GAAG;MAAiB;QAAA0E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACLlF,OAAA;QAAG6E,SAAS,EAAC,eAAe;QAAAC,QAAA,EACzBzE,SAAS,GACN,kDAAkD,GAClD;MAA6D;QAAA0E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAEL1D,KAAK,iBACJxB,OAAA;MAAK6E,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B9E,OAAA;QAAK6E,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnClF,OAAA;QAAK6E,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEtD;MAAK;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CACN,eAEDlF,OAAA;MAAMmF,QAAQ,EAAE9B,YAAa;MAACwB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBACtD9E,OAAA;QAAK6E,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB9E,OAAA;UAAK6E,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B9E,OAAA;YAAI6E,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAErDlF,OAAA;YAAK6E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB9E,OAAA;cAAO6E,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,YACrB,eAAA9E,OAAA;gBAAM6E,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACRlF,OAAA;cACEoC,IAAI,EAAC,MAAM;cACXF,IAAI,EAAC,QAAQ;cACbC,KAAK,EAAE1B,QAAQ,CAACE,MAAO;cACvByE,QAAQ,EAAEpD,YAAa;cACvBqD,QAAQ;cACRR,SAAS,EAAC,YAAY;cACtBS,WAAW,EAAC;YAAsC;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENlF,OAAA;YAAK6E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB9E,OAAA;cAAO6E,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,iBAChB,eAAA9E,OAAA;gBAAM6E,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC,eACRlF,OAAA;cACEkC,IAAI,EAAC,aAAa;cAClBC,KAAK,EAAE1B,QAAQ,CAACG,WAAY;cAC5BwE,QAAQ,EAAEpD,YAAa;cACvBqD,QAAQ;cACRR,SAAS,EAAC,eAAe;cACzBS,WAAW,EAAC,gEAA6D;cACzEC,IAAI,EAAE;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENlF,OAAA;YAAK6E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB9E,OAAA;cAAO6E,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,eAClB,eAAA9E,OAAA;gBAAM6E,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,eACRlF,OAAA;cACEoC,IAAI,EAAC,MAAM;cACXF,IAAI,EAAC,WAAW;cAChBC,KAAK,EAAE1B,QAAQ,CAACI,SAAU;cAC1BuE,QAAQ,EAAEpD,YAAa;cACvBqD,QAAQ;cACRR,SAAS,EAAC,YAAY;cACtBS,WAAW,EAAC;YAAuC;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENlF,OAAA;YAAK6E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB9E,OAAA;cAAO6E,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,OACvB,eAAA9E,OAAA;gBAAM6E,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eACRlF,OAAA;cACEkC,IAAI,EAAC,MAAM;cACXC,KAAK,EAAE1B,QAAQ,CAACM,IAAK;cACrBqE,QAAQ,EAAEpD,YAAa;cACvBqD,QAAQ;cACRR,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAEvB9E,OAAA;gBAAQmC,KAAK,EAAC,EAAE;gBAAA2C,QAAA,EAAC;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACzCN,cAAc,CAACY,GAAG,CAACzE,IAAI,iBACtBf,OAAA;gBAAmBmC,KAAK,EAAEpB,IAAK;gBAAA+D,QAAA,EAAE/D;cAAI,GAAxBA,IAAI;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA6B,CAC/C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENlF,OAAA;UAAK6E,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B9E,OAAA;YAAI6E,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAErDlF,OAAA;YAAK6E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB9E,OAAA;cAAO6E,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,SACrB,eAAA9E,OAAA;gBAAM6E,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC,eACRlF,OAAA;cACEoC,IAAI,EAAC,QAAQ;cACbF,IAAI,EAAC,QAAQ;cACbC,KAAK,EAAE1B,QAAQ,CAACK,MAAO;cACvBsE,QAAQ,EAAEpD,YAAa;cACvBqD,QAAQ;cACRR,SAAS,EAAC,YAAY;cACtBS,WAAW,EAAC,MAAM;cAClBG,GAAG,EAAC,GAAG;cACPC,IAAI,EAAC;YAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENlF,OAAA;YAAK6E,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvB9E,OAAA;cAAK6E,SAAS,EAAC,uBAAuB;cAAAC,QAAA,gBACpC9E,OAAA;gBAAO6E,SAAS,EAAC,YAAY;gBAAAC,QAAA,GAAC,eACf,eAAA9E,OAAA;kBAAM6E,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrD,CAAC,eACRlF,OAAA;gBACEoC,IAAI,EAAC,QAAQ;gBACbF,IAAI,EAAC,cAAc;gBACnBC,KAAK,EAAE1B,QAAQ,CAACO,YAAa;gBAC7BoE,QAAQ,EAAEpD,YAAa;gBACvBqD,QAAQ;gBACRR,SAAS,EAAC,YAAY;gBACtBS,WAAW,EAAC,GAAG;gBACfG,GAAG,EAAC;cAAG;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENlF,OAAA;cAAK6E,SAAS,EAAC,uBAAuB;cAAAC,QAAA,gBACpC9E,OAAA;gBAAO6E,SAAS,EAAC,YAAY;gBAAAC,QAAA,GAAC,WACtB,eAAA9E,OAAA;kBAAM6E,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CAAC,eACRlF,OAAA;gBACEoC,IAAI,EAAC,QAAQ;gBACbF,IAAI,EAAC,OAAO;gBACZC,KAAK,EAAE1B,QAAQ,CAACQ,KAAM;gBACtBmE,QAAQ,EAAEpD,YAAa;gBACvBqD,QAAQ;gBACRR,SAAS,EAAC,YAAY;gBACtBS,WAAW,EAAC,GAAG;gBACfG,GAAG,EAAC;cAAG;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENlF,OAAA;YAAK6E,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB9E,OAAA;cAAO6E,SAAS,EAAC,YAAY;cAAAC,QAAA,GAAC,mBACX,eAAA9E,OAAA;gBAAM6E,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzD,CAAC,eACRlF,OAAA;cACEoC,IAAI,EAAC,QAAQ;cACbF,IAAI,EAAC,iBAAiB;cACtBC,KAAK,EAAE1B,QAAQ,CAACS,eAAgB;cAChCkE,QAAQ,EAAEpD,YAAa;cACvBqD,QAAQ;cACRR,SAAS,EAAC,YAAY;cACtBS,WAAW,EAAC,MAAM;cAClBG,GAAG,EAAC,GAAG;cACPC,IAAI,EAAC;YAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENlF,OAAA;YAAK6E,SAAS,EAAC,gBAAgB;YAAAC,QAAA,eAC7B9E,OAAA;cAAO6E,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC/B9E,OAAA;gBACEoC,IAAI,EAAC,UAAU;gBACfF,IAAI,EAAC,YAAY;gBACjBG,OAAO,EAAE5B,QAAQ,CAACU,UAAW;gBAC7BiE,QAAQ,EAAEpD,YAAa;gBACvB6C,SAAS,EAAC;cAAgB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC,eACFlF,OAAA;gBAAM6E,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAoB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENlF,OAAA;QAAK6E,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACtC9E,OAAA;UAAI6E,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzDlF,OAAA;UAAK6E,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB9E,OAAA;YAAO6E,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAC,qBACT,EAACzE,SAAS,GAAG,EAAE,gBAAGL,OAAA;cAAM6E,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7E,CAAC,eACRlF,OAAA;YACEoC,IAAI,EAAC,MAAM;YACXF,IAAI,EAAC,QAAQ,CAAC;YAAA;YACdyD,MAAM,EAAC,SAAS,CAAC;YAAA;YACjBP,QAAQ,EAAE5C,iBAAkB;YAC5BqC,SAAS,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,EACD5D,aAAa,iBACZtB,OAAA;YAAK6E,SAAS,EAAC,yBAAyB;YAAAC,QAAA,gBACtC9E,OAAA;cAAA8E,QAAA,EAAG;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACxBlF,OAAA;cAAK4F,GAAG,EAAEtE,aAAc;cAACuE,GAAG,EAAC,qBAAkB;cAAChB,SAAS,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzE,CACN,eACDlF,OAAA;YAAG6E,SAAS,EAAC,YAAY;YAAAC,QAAA,EACtBzE,SAAS,GAAG,kFAAkF,GAAG;UAAwE;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENlF,OAAA;QAAK6E,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B9E,OAAA;UACEoC,IAAI,EAAC,QAAQ;UACb0D,OAAO,EAAEvF,QAAS;UAClBsE,SAAS,EAAC,eAAe;UACzBkB,QAAQ,EAAErE,YAAa;UAAAoD,QAAA,EACxB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTlF,OAAA;UACEoC,IAAI,EAAC,QAAQ;UACbyC,SAAS,EAAE,eAAenD,YAAY,GAAG,SAAS,GAAG,EAAE,EAAG;UAC1DqE,QAAQ,EAAErE,YAAa;UAAAoD,QAAA,EAEtBpD,YAAY,gBACX1B,OAAA,CAAAE,SAAA;YAAA4E,QAAA,gBACE9E,OAAA;cAAM6E,SAAS,EAAC;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,gBAE3C;UAAA,eAAE,CAAC,GAEH7E,SAAS,GAAG,sBAAsB,GAAG;QACtC;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1E,EAAA,CApbQJ,aAAa;AAAA4F,EAAA,GAAb5F,aAAa;AAsbtB,eAAeA,aAAa;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}