{"ast":null,"code":"\"use strict\";\n\nimport { defineSlotRecipe, defineStyle } from '../../styled-system/config.js';\nimport { treeViewAnatomy } from '@ark-ui/react/tree-view';\nconst baseItemStyle = defineStyle({\n  display: \"flex\",\n  alignItems: \"center\",\n  gap: \"var(--tree-item-gap)\",\n  rounded: \"l2\",\n  userSelect: \"none\",\n  position: \"relative\",\n  \"--tree-depth\": \"calc(var(--depth) - 1)\",\n  \"--tree-indentation-offset\": \"calc(var(--tree-indentation) * var(--tree-depth))\",\n  \"--tree-icon-offset\": \"calc(var(--tree-icon-size) * var(--tree-depth) * 0.5)\",\n  \"--tree-offset\": \"calc(var(--tree-padding-inline) + var(--tree-indentation-offset) + var(--tree-icon-offset))\",\n  ps: \"var(--tree-offset)\",\n  pe: \"var(--tree-padding-inline)\",\n  py: \"var(--tree-padding-block)\",\n  focusVisibleRing: \"inside\",\n  focusRingColor: \"border.emphasized\",\n  focusRingWidth: \"2px\",\n  \"&:hover, &:focus-visible\": {\n    bg: \"bg.muted\"\n  },\n  _disabled: {\n    layerStyle: \"disabled\"\n  }\n});\nconst baseTextStyle = defineStyle({\n  flex: \"1\"\n});\nconst subtleVariantStyle = defineStyle({\n  _selected: {\n    bg: \"colorPalette.subtle\",\n    color: \"colorPalette.fg\"\n  }\n});\nconst solidVariantStyle = defineStyle({\n  _selected: {\n    layerStyle: \"fill.solid\"\n  }\n});\nconst treeViewSlotRecipe = defineSlotRecipe({\n  slots: treeViewAnatomy.keys(),\n  className: \"chakra-tree-view\",\n  base: {\n    root: {\n      width: \"full\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"2\"\n    },\n    tree: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      \"--tree-item-gap\": \"spacing.2\",\n      _icon: {\n        boxSize: \"var(--tree-icon-size)\"\n      }\n    },\n    label: {\n      fontWeight: \"medium\",\n      textStyle: \"sm\"\n    },\n    branch: {\n      position: \"relative\"\n    },\n    branchContent: {\n      position: \"relative\"\n    },\n    branchIndentGuide: {\n      height: \"100%\",\n      width: \"1px\",\n      bg: \"border\",\n      position: \"absolute\",\n      \"--tree-depth\": \"calc(var(--depth) - 1)\",\n      \"--tree-indentation-offset\": \"calc(var(--tree-indentation) * var(--tree-depth))\",\n      \"--tree-offset\": \"calc(var(--tree-padding-inline) + var(--tree-indentation-offset))\",\n      \"--tree-icon-offset\": \"calc(var(--tree-icon-size) * 0.5 * var(--depth))\",\n      insetInlineStart: \"calc(var(--tree-offset) + var(--tree-icon-offset))\",\n      zIndex: \"1\"\n    },\n    branchIndicator: {\n      color: \"fg.muted\",\n      transformOrigin: \"center\",\n      transitionDuration: \"normal\",\n      transitionProperty: \"transform\",\n      transitionTimingFunction: \"default\",\n      _open: {\n        transform: \"rotate(90deg)\"\n      }\n    },\n    branchTrigger: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    branchControl: baseItemStyle,\n    item: baseItemStyle,\n    itemText: baseTextStyle,\n    branchText: baseTextStyle,\n    nodeCheckbox: {\n      display: \"inline-flex\"\n    }\n  },\n  variants: {\n    size: {\n      md: {\n        tree: {\n          textStyle: \"sm\",\n          \"--tree-indentation\": \"spacing.4\",\n          \"--tree-padding-inline\": \"spacing.3\",\n          \"--tree-padding-block\": \"spacing.1.5\",\n          \"--tree-icon-size\": \"spacing.4\"\n        }\n      },\n      sm: {\n        tree: {\n          textStyle: \"sm\",\n          \"--tree-indentation\": \"spacing.4\",\n          \"--tree-padding-inline\": \"spacing.3\",\n          \"--tree-padding-block\": \"spacing.1\",\n          \"--tree-icon-size\": \"spacing.3\"\n        }\n      },\n      xs: {\n        tree: {\n          textStyle: \"xs\",\n          \"--tree-indentation\": \"spacing.4\",\n          \"--tree-padding-inline\": \"spacing.2\",\n          \"--tree-padding-block\": \"spacing.1\",\n          \"--tree-icon-size\": \"spacing.3\"\n        }\n      }\n    },\n    variant: {\n      subtle: {\n        branchControl: subtleVariantStyle,\n        item: subtleVariantStyle\n      },\n      solid: {\n        branchControl: solidVariantStyle,\n        item: solidVariantStyle\n      }\n    },\n    animateContent: {\n      true: {\n        branchContent: {\n          _open: {\n            animationName: \"expand-height, fade-in\",\n            animationDuration: \"moderate\"\n          },\n          _closed: {\n            animationName: \"collapse-height, fade-out\",\n            animationDuration: \"moderate\"\n          }\n        }\n      }\n    }\n  },\n  defaultVariants: {\n    size: \"md\",\n    variant: \"subtle\"\n  }\n});\nexport { treeViewSlotRecipe };","map":{"version":3,"names":["defineSlotRecipe","defineStyle","treeViewAnatomy","baseItemStyle","display","alignItems","gap","rounded","userSelect","position","ps","pe","py","focusVisibleRing","focusRingColor","focusRingWidth","bg","_disabled","layerStyle","baseTextStyle","flex","subtleVariantStyle","_selected","color","solidVariantStyle","treeViewSlotRecipe","slots","keys","className","base","root","width","flexDirection","tree","_icon","boxSize","label","fontWeight","textStyle","branch","branchContent","branchIndentGuide","height","insetInlineStart","zIndex","branchIndicator","transformOrigin","transitionDuration","transitionProperty","transitionTimingFunction","_open","transform","branchTrigger","justifyContent","branchControl","item","itemText","branchText","nodeCheckbox","variants","size","md","sm","xs","variant","subtle","solid","animateContent","true","animationName","animationDuration","_closed","defaultVariants"],"sources":["/Users/sofia-kalpin/Documents/Facu/ADR/Frontend/inmobiliaria-frontend/node_modules/@chakra-ui/react/dist/esm/theme/recipes/tree-view.js"],"sourcesContent":["\"use strict\";\nimport { defineSlotRecipe, defineStyle } from '../../styled-system/config.js';\nimport { treeViewAnatomy } from '@ark-ui/react/tree-view';\n\nconst baseItemStyle = defineStyle({\n  display: \"flex\",\n  alignItems: \"center\",\n  gap: \"var(--tree-item-gap)\",\n  rounded: \"l2\",\n  userSelect: \"none\",\n  position: \"relative\",\n  \"--tree-depth\": \"calc(var(--depth) - 1)\",\n  \"--tree-indentation-offset\": \"calc(var(--tree-indentation) * var(--tree-depth))\",\n  \"--tree-icon-offset\": \"calc(var(--tree-icon-size) * var(--tree-depth) * 0.5)\",\n  \"--tree-offset\": \"calc(var(--tree-padding-inline) + var(--tree-indentation-offset) + var(--tree-icon-offset))\",\n  ps: \"var(--tree-offset)\",\n  pe: \"var(--tree-padding-inline)\",\n  py: \"var(--tree-padding-block)\",\n  focusVisibleRing: \"inside\",\n  focusRingColor: \"border.emphasized\",\n  focusRingWidth: \"2px\",\n  \"&:hover, &:focus-visible\": {\n    bg: \"bg.muted\"\n  },\n  _disabled: {\n    layerStyle: \"disabled\"\n  }\n});\nconst baseTextStyle = defineStyle({\n  flex: \"1\"\n});\nconst subtleVariantStyle = defineStyle({\n  _selected: {\n    bg: \"colorPalette.subtle\",\n    color: \"colorPalette.fg\"\n  }\n});\nconst solidVariantStyle = defineStyle({\n  _selected: {\n    layerStyle: \"fill.solid\"\n  }\n});\nconst treeViewSlotRecipe = defineSlotRecipe({\n  slots: treeViewAnatomy.keys(),\n  className: \"chakra-tree-view\",\n  base: {\n    root: {\n      width: \"full\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"2\"\n    },\n    tree: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      \"--tree-item-gap\": \"spacing.2\",\n      _icon: {\n        boxSize: \"var(--tree-icon-size)\"\n      }\n    },\n    label: {\n      fontWeight: \"medium\",\n      textStyle: \"sm\"\n    },\n    branch: {\n      position: \"relative\"\n    },\n    branchContent: {\n      position: \"relative\"\n    },\n    branchIndentGuide: {\n      height: \"100%\",\n      width: \"1px\",\n      bg: \"border\",\n      position: \"absolute\",\n      \"--tree-depth\": \"calc(var(--depth) - 1)\",\n      \"--tree-indentation-offset\": \"calc(var(--tree-indentation) * var(--tree-depth))\",\n      \"--tree-offset\": \"calc(var(--tree-padding-inline) + var(--tree-indentation-offset))\",\n      \"--tree-icon-offset\": \"calc(var(--tree-icon-size) * 0.5 * var(--depth))\",\n      insetInlineStart: \"calc(var(--tree-offset) + var(--tree-icon-offset))\",\n      zIndex: \"1\"\n    },\n    branchIndicator: {\n      color: \"fg.muted\",\n      transformOrigin: \"center\",\n      transitionDuration: \"normal\",\n      transitionProperty: \"transform\",\n      transitionTimingFunction: \"default\",\n      _open: {\n        transform: \"rotate(90deg)\"\n      }\n    },\n    branchTrigger: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    branchControl: baseItemStyle,\n    item: baseItemStyle,\n    itemText: baseTextStyle,\n    branchText: baseTextStyle,\n    nodeCheckbox: {\n      display: \"inline-flex\"\n    }\n  },\n  variants: {\n    size: {\n      md: {\n        tree: {\n          textStyle: \"sm\",\n          \"--tree-indentation\": \"spacing.4\",\n          \"--tree-padding-inline\": \"spacing.3\",\n          \"--tree-padding-block\": \"spacing.1.5\",\n          \"--tree-icon-size\": \"spacing.4\"\n        }\n      },\n      sm: {\n        tree: {\n          textStyle: \"sm\",\n          \"--tree-indentation\": \"spacing.4\",\n          \"--tree-padding-inline\": \"spacing.3\",\n          \"--tree-padding-block\": \"spacing.1\",\n          \"--tree-icon-size\": \"spacing.3\"\n        }\n      },\n      xs: {\n        tree: {\n          textStyle: \"xs\",\n          \"--tree-indentation\": \"spacing.4\",\n          \"--tree-padding-inline\": \"spacing.2\",\n          \"--tree-padding-block\": \"spacing.1\",\n          \"--tree-icon-size\": \"spacing.3\"\n        }\n      }\n    },\n    variant: {\n      subtle: {\n        branchControl: subtleVariantStyle,\n        item: subtleVariantStyle\n      },\n      solid: {\n        branchControl: solidVariantStyle,\n        item: solidVariantStyle\n      }\n    },\n    animateContent: {\n      true: {\n        branchContent: {\n          _open: {\n            animationName: \"expand-height, fade-in\",\n            animationDuration: \"moderate\"\n          },\n          _closed: {\n            animationName: \"collapse-height, fade-out\",\n            animationDuration: \"moderate\"\n          }\n        }\n      }\n    }\n  },\n  defaultVariants: {\n    size: \"md\",\n    variant: \"subtle\"\n  }\n});\n\nexport { treeViewSlotRecipe };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}