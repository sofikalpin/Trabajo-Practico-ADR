{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useCallback, useMemo } from 'react';\nimport { useEvent } from '../../utils/use-event.js';\nimport { createListCollection } from './list-collection.js';\nfunction useListCollection(props) {\n  const {\n    initialItems = [],\n    filter,\n    limit,\n    ...collectionOptions\n  } = props;\n  const [items, setItemsImpl] = useState(initialItems);\n  const [filterText, setFilterText] = useState(\"\");\n  const setItems = useEvent(items2 => {\n    setItemsImpl(items2);\n    setFilterText(\"\");\n  });\n  const collectionOptionsRef = useRef(collectionOptions);\n  collectionOptionsRef.current = collectionOptions;\n  const create = useCallback(items2 => {\n    return createListCollection({\n      ...collectionOptionsRef.current,\n      items: items2\n    });\n  }, []);\n  const collection = useMemo(() => {\n    let activeItems = items;\n    if (filterText && filter) {\n      activeItems = create(items).filter((itemString, _index, item) => filter(itemString, filterText, item)).items;\n    }\n    const limitedItems = limit == null ? activeItems : activeItems.slice(0, limit);\n    return createListCollection({\n      ...collectionOptionsRef.current,\n      items: limitedItems\n    });\n  }, [items, filterText, filter, limit, create]);\n  return {\n    collection,\n    filter: useEvent(inputValue => {\n      setFilterText(inputValue || \"\");\n    }),\n    set: useEvent(newItems => {\n      setItems(newItems);\n    }),\n    reset: useEvent(() => {\n      setItems(initialItems);\n    }),\n    clear: useEvent(() => {\n      setItems([]);\n    }),\n    insert: useEvent((index, ...itemsToInsert) => {\n      const newItems = create(items).insert(index, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    insertBefore: useEvent((value, ...itemsToInsert) => {\n      const newItems = create(items).insertBefore(value, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    insertAfter: useEvent((value, ...itemsToInsert) => {\n      const newItems = create(items).insertAfter(value, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    remove: useEvent((...itemOrValues) => {\n      const newItems = create(items).remove(...itemOrValues).items;\n      setItems(newItems);\n    }),\n    move: useEvent((value, to) => {\n      const newItems = create(items).move(value, to).items;\n      setItems(newItems);\n    }),\n    moveBefore: useEvent((value, ...values) => {\n      const newItems = create(items).moveBefore(value, ...values).items;\n      setItems(newItems);\n    }),\n    moveAfter: useEvent((value, ...values) => {\n      const newItems = create(items).moveAfter(value, ...values).items;\n      setItems(newItems);\n    }),\n    reorder: useEvent((from, to) => {\n      const newItems = create(items).reorder(from, to).items;\n      setItems(newItems);\n    }),\n    append: useEvent((...itemsToAppend) => {\n      const newItems = create(items).append(...itemsToAppend).items;\n      setItems(newItems);\n    }),\n    upsert: useEvent((value, item, mode = \"append\") => {\n      const newItems = create(items).upsert(value, item, mode).items;\n      setItems(newItems);\n    }),\n    prepend: useEvent((...itemsToPrepend) => {\n      const newItems = create(items).prepend(...itemsToPrepend).items;\n      setItems(newItems);\n    }),\n    update: useEvent((value, item) => {\n      const newItems = create(items).update(value, item).items;\n      setItems(newItems);\n    })\n  };\n}\nexport { useListCollection };","map":{"version":3,"names":["useState","useRef","useCallback","useMemo","useEvent","createListCollection","useListCollection","props","initialItems","filter","limit","collectionOptions","items","setItemsImpl","filterText","setFilterText","setItems","items2","collectionOptionsRef","current","create","collection","activeItems","itemString","_index","item","limitedItems","slice","inputValue","set","newItems","reset","clear","insert","index","itemsToInsert","insertBefore","value","insertAfter","remove","itemOrValues","move","to","moveBefore","values","moveAfter","reorder","from","append","itemsToAppend","upsert","mode","prepend","itemsToPrepend","update"],"sources":["/Users/sofia-kalpin/Documents/Facu/ADR/Frontend/inmobiliaria-frontend/node_modules/@ark-ui/react/dist/components/collection/use-list-collection.js"],"sourcesContent":["'use client';\nimport { useState, useRef, useCallback, useMemo } from 'react';\nimport { useEvent } from '../../utils/use-event.js';\nimport { createListCollection } from './list-collection.js';\n\nfunction useListCollection(props) {\n  const { initialItems = [], filter, limit, ...collectionOptions } = props;\n  const [items, setItemsImpl] = useState(initialItems);\n  const [filterText, setFilterText] = useState(\"\");\n  const setItems = useEvent((items2) => {\n    setItemsImpl(items2);\n    setFilterText(\"\");\n  });\n  const collectionOptionsRef = useRef(collectionOptions);\n  collectionOptionsRef.current = collectionOptions;\n  const create = useCallback((items2) => {\n    return createListCollection({ ...collectionOptionsRef.current, items: items2 });\n  }, []);\n  const collection = useMemo(() => {\n    let activeItems = items;\n    if (filterText && filter) {\n      activeItems = create(items).filter((itemString, _index, item) => filter(itemString, filterText, item)).items;\n    }\n    const limitedItems = limit == null ? activeItems : activeItems.slice(0, limit);\n    return createListCollection({ ...collectionOptionsRef.current, items: limitedItems });\n  }, [items, filterText, filter, limit, create]);\n  return {\n    collection,\n    filter: useEvent((inputValue) => {\n      setFilterText(inputValue || \"\");\n    }),\n    set: useEvent((newItems) => {\n      setItems(newItems);\n    }),\n    reset: useEvent(() => {\n      setItems(initialItems);\n    }),\n    clear: useEvent(() => {\n      setItems([]);\n    }),\n    insert: useEvent((index, ...itemsToInsert) => {\n      const newItems = create(items).insert(index, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    insertBefore: useEvent((value, ...itemsToInsert) => {\n      const newItems = create(items).insertBefore(value, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    insertAfter: useEvent((value, ...itemsToInsert) => {\n      const newItems = create(items).insertAfter(value, ...itemsToInsert).items;\n      setItems(newItems);\n    }),\n    remove: useEvent((...itemOrValues) => {\n      const newItems = create(items).remove(...itemOrValues).items;\n      setItems(newItems);\n    }),\n    move: useEvent((value, to) => {\n      const newItems = create(items).move(value, to).items;\n      setItems(newItems);\n    }),\n    moveBefore: useEvent((value, ...values) => {\n      const newItems = create(items).moveBefore(value, ...values).items;\n      setItems(newItems);\n    }),\n    moveAfter: useEvent((value, ...values) => {\n      const newItems = create(items).moveAfter(value, ...values).items;\n      setItems(newItems);\n    }),\n    reorder: useEvent((from, to) => {\n      const newItems = create(items).reorder(from, to).items;\n      setItems(newItems);\n    }),\n    append: useEvent((...itemsToAppend) => {\n      const newItems = create(items).append(...itemsToAppend).items;\n      setItems(newItems);\n    }),\n    upsert: useEvent((value, item, mode = \"append\") => {\n      const newItems = create(items).upsert(value, item, mode).items;\n      setItems(newItems);\n    }),\n    prepend: useEvent((...itemsToPrepend) => {\n      const newItems = create(items).prepend(...itemsToPrepend).items;\n      setItems(newItems);\n    }),\n    update: useEvent((value, item) => {\n      const newItems = create(items).update(value, item).items;\n      setItems(newItems);\n    })\n  };\n}\n\nexport { useListCollection };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}