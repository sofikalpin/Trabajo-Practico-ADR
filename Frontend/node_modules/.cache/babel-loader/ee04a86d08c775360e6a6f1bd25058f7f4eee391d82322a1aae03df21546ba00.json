{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Downloads\\\\ADR\\\\ADR\\\\Frontend\\\\inmobiliaria-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropiedadesList from './components/PropiedadesList';\nimport AuthForm from './components/AuthForm';\nimport ImageCarousel from './components/ImageCarousel.js';\nimport './App.css';\nimport logo from './logo/img.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showAuthForm, setShowAuthForm] = useState(false);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [carouselImages, setCarouselImages] = useState([]);\n\n  // Asegúrate de reemplazar 'TU_ACCES_KEY_DE_UNSPLASH' con tu clave real de Unsplash.\n  // Es recomendable gestionar esta clave de forma más segura en un entorno de producción (ej. variables de entorno).\n  const UNSPLASH_ACCESS_KEY = 'TU_ACCES_KEY_DE_UNSPLASH';\n  useEffect(() => {\n    // Verifica si hay un token de autenticación en el almacenamiento local al cargar la aplicación.\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n\n    // Función para cargar imágenes para el carrusel desde Unsplash.\n    const fetchCarouselImages = async () => {\n      try {\n        const query = 'real estate property interior';\n        const perPage = 3;\n        const response = await fetch(`https://api.unsplash.com/search/photos?query=${query}&per_page=${perPage}&client_id=${UNSPLASH_ACCESS_KEY}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const imagesUrls = data.results.map(photo => photo.urls.regular);\n        setCarouselImages(imagesUrls);\n      } catch (error) {\n        console.error('Error al cargar imágenes del carrusel desde Unsplash:', error);\n        // Si hay un error, se usan imágenes de marcador de posición.\n        setCarouselImages(['https://via.placeholder.com/800x400?text=Error+al+cargar+imagen+1', 'https://via.placeholder.com/800x400?text=Error+al+cargar+imagen+2', 'https://via.placeholder.com/800x400?text=Error+al+cargar+imagen+3']);\n      }\n    };\n    fetchCarouselImages();\n  }, [UNSPLASH_ACCESS_KEY]); // Se incluye UNSPLASH_ACCESS_KEY como dependencia para useEffect, aunque en este caso es una constante.\n\n  // Maneja el éxito de la autenticación o registro.\n  const handleAuthSuccess = () => {\n    setIsAuthenticated(true);\n    setShowAuthForm(false); // Cierra el formulario de autenticación/registro.\n  };\n\n  // Maneja la cancelación del formulario de autenticación/registro.\n  const handleAuthCancel = () => {\n    setShowAuthForm(false);\n    setIsRegistering(false); // Restablece el estado de registro.\n  };\n\n  // Maneja el cierre de sesión del usuario.\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Elimina el token del almacenamiento local.\n    setIsAuthenticated(false); // Actualiza el estado de autenticación.\n    alert('Has cerrado sesión exitosamente.');\n  };\n\n  // Maneja la apertura del formulario de registro de un nuevo usuario.\n  const handleOpenRegisterForm = () => {\n    // Si el usuario ya está autenticado, puede registrar un nuevo usuario.\n    if (isAuthenticated) {\n      setShowAuthForm(true);\n      setIsRegistering(true); // Establece el formulario en modo registro.\n    } else {\n      // Si el usuario no está autenticado, se le pide que inicie sesión primero.\n      alert('Para registrar nuevas cuentas, debes iniciar sesión como un usuario existente.');\n      setShowAuthForm(true);\n      setIsRegistering(false); // Se muestra el formulario de inicio de sesión.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo de la Inmobiliaria\",\n        className: \"app-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-buttons\",\n        children: isAuthenticated ?\n        /*#__PURE__*/\n        // Si el usuario está autenticado, se muestran los botones para registrar nuevo usuario y cerrar sesión.\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleOpenRegisterForm,\n            className: \"btn-register-new-user\",\n            children: \"Registrar Nuevo Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"btn-logout\",\n            children: \"Cerrar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Si el usuario no está autenticado, solo se muestra el botón para iniciar sesión.\n        _jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowAuthForm(true);\n              setIsRegistering(false);\n            },\n            className: \"btn-login primary-login-btn\",\n            children: \"Iniciar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [carouselImages.length > 0 && /*#__PURE__*/_jsxDEV(ImageCarousel, {\n        images: carouselImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(PropiedadesList, {\n        isAuthenticated: isAuthenticated,\n        setShowAuthForm: setShowAuthForm,\n        setIsRegistering: setIsRegistering\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), showAuthForm && /*#__PURE__*/_jsxDEV(AuthForm, {\n      onAuthSuccess: handleAuthSuccess,\n      onCancel: handleAuthCancel,\n      isRegister: isRegistering // Pasa el estado para saber si es registro o inicio de sesión.\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"u019ycC/mQP14eXprCwxAuIe8RU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PropiedadesList","AuthForm","ImageCarousel","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","showAuthForm","setShowAuthForm","isRegistering","setIsRegistering","carouselImages","setCarouselImages","UNSPLASH_ACCESS_KEY","token","localStorage","getItem","fetchCarouselImages","query","perPage","response","fetch","ok","Error","status","data","json","imagesUrls","results","map","photo","urls","regular","error","console","handleAuthSuccess","handleAuthCancel","handleLogout","removeItem","alert","handleOpenRegisterForm","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","images","onAuthSuccess","onCancel","isRegister","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Downloads/ADR/ADR/Frontend/inmobiliaria-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropiedadesList from './components/PropiedadesList';\nimport AuthForm from './components/AuthForm';\nimport ImageCarousel from './components/ImageCarousel.js';\nimport './App.css';\nimport logo from './logo/img.png';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showAuthForm, setShowAuthForm] = useState(false);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [carouselImages, setCarouselImages] = useState([]);\n\n  // Asegúrate de reemplazar 'TU_ACCES_KEY_DE_UNSPLASH' con tu clave real de Unsplash.\n  // Es recomendable gestionar esta clave de forma más segura en un entorno de producción (ej. variables de entorno).\n  const UNSPLASH_ACCESS_KEY = 'TU_ACCES_KEY_DE_UNSPLASH'; \n\n  useEffect(() => {\n    // Verifica si hay un token de autenticación en el almacenamiento local al cargar la aplicación.\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n\n    // Función para cargar imágenes para el carrusel desde Unsplash.\n    const fetchCarouselImages = async () => {\n      try {\n        const query = 'real estate property interior';\n        const perPage = 3;\n        const response = await fetch(\n          `https://api.unsplash.com/search/photos?query=${query}&per_page=${perPage}&client_id=${UNSPLASH_ACCESS_KEY}`\n        );\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        const imagesUrls = data.results.map(photo => photo.urls.regular);\n        setCarouselImages(imagesUrls);\n\n      } catch (error) {\n        console.error('Error al cargar imágenes del carrusel desde Unsplash:', error);\n        // Si hay un error, se usan imágenes de marcador de posición.\n        setCarouselImages([\n          'https://via.placeholder.com/800x400?text=Error+al+cargar+imagen+1',\n          'https://via.placeholder.com/800x400?text=Error+al+cargar+imagen+2',\n          'https://via.placeholder.com/800x400?text=Error+al+cargar+imagen+3',\n        ]);\n      }\n    };\n\n    fetchCarouselImages();\n  }, [UNSPLASH_ACCESS_KEY]); // Se incluye UNSPLASH_ACCESS_KEY como dependencia para useEffect, aunque en este caso es una constante.\n\n  // Maneja el éxito de la autenticación o registro.\n  const handleAuthSuccess = () => {\n    setIsAuthenticated(true);\n    setShowAuthForm(false); // Cierra el formulario de autenticación/registro.\n  };\n\n  // Maneja la cancelación del formulario de autenticación/registro.\n  const handleAuthCancel = () => {\n    setShowAuthForm(false);\n    setIsRegistering(false); // Restablece el estado de registro.\n  };\n\n  // Maneja el cierre de sesión del usuario.\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Elimina el token del almacenamiento local.\n    setIsAuthenticated(false); // Actualiza el estado de autenticación.\n    alert('Has cerrado sesión exitosamente.');\n  };\n\n  // Maneja la apertura del formulario de registro de un nuevo usuario.\n  const handleOpenRegisterForm = () => {\n    // Si el usuario ya está autenticado, puede registrar un nuevo usuario.\n    if (isAuthenticated) {\n      setShowAuthForm(true);\n      setIsRegistering(true); // Establece el formulario en modo registro.\n    } else {\n      // Si el usuario no está autenticado, se le pide que inicie sesión primero.\n      alert('Para registrar nuevas cuentas, debes iniciar sesión como un usuario existente.');\n      setShowAuthForm(true);\n      setIsRegistering(false); // Se muestra el formulario de inicio de sesión.\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <img src={logo} alt=\"Logo de la Inmobiliaria\" className=\"app-logo\" />\n        <div className=\"auth-buttons\">\n          {isAuthenticated ? (\n            // Si el usuario está autenticado, se muestran los botones para registrar nuevo usuario y cerrar sesión.\n            <>\n              <button onClick={handleOpenRegisterForm} className=\"btn-register-new-user\">\n                Registrar Nuevo Usuario\n              </button>\n              <button onClick={handleLogout} className=\"btn-logout\">\n                Cerrar Sesión\n              </button>\n            </>\n          ) : (\n            // Si el usuario no está autenticado, solo se muestra el botón para iniciar sesión.\n            <>\n              <button onClick={() => { setShowAuthForm(true); setIsRegistering(false); }} className=\"btn-login primary-login-btn\">\n                Iniciar Sesión\n              </button>\n            </>\n          )}\n        </div>\n      </header>\n      <main>\n        {/* Renderiza el carrusel de imágenes si hay imágenes cargadas. */}\n        {carouselImages.length > 0 && <ImageCarousel images={carouselImages} />}\n        {/* Renderiza la lista de propiedades, pasando el estado de autenticación y funciones para mostrar formularios. */}\n        <PropiedadesList\n          isAuthenticated={isAuthenticated}\n          setShowAuthForm={setShowAuthForm}\n          setIsRegistering={setIsRegistering}\n        />\n      </main>\n\n      {/* Renderiza el formulario de autenticación/registro si showAuthForm es verdadero. */}\n      {showAuthForm && (\n        <AuthForm\n          onAuthSuccess={handleAuthSuccess}\n          onCancel={handleAuthCancel}\n          isRegister={isRegistering} // Pasa el estado para saber si es registro o inicio de sesión.\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}