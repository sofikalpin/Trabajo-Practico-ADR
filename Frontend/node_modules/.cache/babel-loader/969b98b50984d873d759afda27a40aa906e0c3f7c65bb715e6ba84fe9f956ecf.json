{"ast":null,"code":"import { getWindow, getDocument, getEventTarget, isVirtualClick, isMac } from '@zag-js/dom-query';\n\n// src/index.ts\nfunction isValidKey(e) {\n  return !(e.metaKey || !isMac() && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nvar nonTextInputTypes = /* @__PURE__ */new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\nfunction isKeyboardFocusEvent(isTextInput, modality, e) {\n  const target = e ? getEventTarget(e) : null;\n  const win = getWindow(target);\n  isTextInput = isTextInput || target instanceof win.HTMLInputElement && !nonTextInputTypes.has(target?.type) || target instanceof win.HTMLTextAreaElement || target instanceof win.HTMLElement && target.isContentEditable;\n  return !(isTextInput && modality === \"keyboard\" && e instanceof win.KeyboardEvent && !Reflect.has(FOCUS_VISIBLE_INPUT_KEYS, e.key));\n}\nvar currentModality = null;\nvar changeHandlers = /* @__PURE__ */new Set();\nvar listenerMap = /* @__PURE__ */new Map();\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction triggerChangeHandlers(modality, e) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\nfunction handleKeyboardEvent(e) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = \"keyboard\";\n    triggerChangeHandlers(\"keyboard\", e);\n  }\n}\nfunction handlePointerEvent(e) {\n  currentModality = \"pointer\";\n  if (e.type === \"mousedown\" || e.type === \"pointerdown\") {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers(\"pointer\", e);\n  }\n}\nfunction handleClickEvent(e) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = \"virtual\";\n  }\n}\nfunction handleFocusEvent(e) {\n  const target = getEventTarget(e);\n  if (target === getWindow(target) || target === getDocument(target)) {\n    return;\n  }\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", e);\n  }\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\nfunction handleWindowBlur() {\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\nfunction setupGlobalFocusEvents(root) {\n  if (typeof window === \"undefined\" || listenerMap.get(getWindow(root))) {\n    return;\n  }\n  const win = getWindow(root);\n  const doc = getDocument(root);\n  let focus = win.HTMLElement.prototype.focus;\n  function patchedFocus() {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", null);\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  }\n  Object.defineProperty(win.HTMLElement.prototype, \"focus\", {\n    configurable: true,\n    value: patchedFocus\n  });\n  doc.addEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.addEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.addEventListener(\"click\", handleClickEvent, true);\n  win.addEventListener(\"focus\", handleFocusEvent, true);\n  win.addEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.addEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.addEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.addEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.addEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.addEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.addEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  win.addEventListener(\"beforeunload\", () => {\n    tearDownWindowFocusTracking(root);\n  }, {\n    once: true\n  });\n  listenerMap.set(win, {\n    focus\n  });\n}\nvar tearDownWindowFocusTracking = (root, loadListener) => {\n  const win = getWindow(root);\n  const doc = getDocument(root);\n  if (!listenerMap.has(win)) {\n    return;\n  }\n  win.HTMLElement.prototype.focus = listenerMap.get(win).focus;\n  doc.removeEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"click\", handleClickEvent, true);\n  win.removeEventListener(\"focus\", handleFocusEvent, true);\n  win.removeEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.removeEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.removeEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.removeEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.removeEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  listenerMap.delete(win);\n};\nfunction getInteractionModality() {\n  return currentModality;\n}\nfunction setInteractionModality(modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\nfunction trackInteractionModality(props) {\n  const {\n    onChange,\n    root\n  } = props;\n  setupGlobalFocusEvents(root);\n  onChange({\n    modality: currentModality\n  });\n  const handler = () => onChange({\n    modality: currentModality\n  });\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\nfunction isFocusVisible() {\n  return currentModality === \"keyboard\";\n}\nfunction trackFocusVisible(props = {}) {\n  const {\n    isTextInput,\n    autoFocus,\n    onChange,\n    root\n  } = props;\n  setupGlobalFocusEvents(root);\n  onChange?.({\n    isFocusVisible: autoFocus || isFocusVisible(),\n    modality: currentModality\n  });\n  const handler = (modality, e) => {\n    if (!isKeyboardFocusEvent(!!isTextInput, modality, e)) return;\n    onChange?.({\n      isFocusVisible: isFocusVisible(),\n      modality\n    });\n  };\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\nexport { getInteractionModality, isFocusVisible, listenerMap, setInteractionModality, trackFocusVisible, trackInteractionModality };","map":{"version":3,"names":["getWindow","getDocument","getEventTarget","isVirtualClick","isMac","isValidKey","e","metaKey","altKey","ctrlKey","key","nonTextInputTypes","Set","isKeyboardFocusEvent","isTextInput","modality","target","win","HTMLInputElement","has","type","HTMLTextAreaElement","HTMLElement","isContentEditable","KeyboardEvent","Reflect","FOCUS_VISIBLE_INPUT_KEYS","currentModality","changeHandlers","listenerMap","Map","hasEventBeforeFocus","hasBlurredWindowRecently","Tab","Escape","triggerChangeHandlers","handler","handleKeyboardEvent","handlePointerEvent","handleClickEvent","handleFocusEvent","handleWindowBlur","setupGlobalFocusEvents","root","window","get","doc","focus","prototype","patchedFocus","apply","arguments","Object","defineProperty","configurable","value","addEventListener","PointerEvent","tearDownWindowFocusTracking","once","set","loadListener","removeEventListener","delete","getInteractionModality","setInteractionModality","trackInteractionModality","props","onChange","add","isFocusVisible","trackFocusVisible","autoFocus"],"sources":["/Users/sofia-kalpin/Documents/Facu/ADR/Frontend/inmobiliaria-frontend/node_modules/@zag-js/focus-visible/dist/index.mjs"],"sourcesContent":["import { getWindow, getDocument, getEventTarget, isVirtualClick, isMac } from '@zag-js/dom-query';\n\n// src/index.ts\nfunction isValidKey(e) {\n  return !(e.metaKey || !isMac() && e.altKey || e.ctrlKey || e.key === \"Control\" || e.key === \"Shift\" || e.key === \"Meta\");\n}\nvar nonTextInputTypes = /* @__PURE__ */ new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\nfunction isKeyboardFocusEvent(isTextInput, modality, e) {\n  const target = e ? getEventTarget(e) : null;\n  const win = getWindow(target);\n  isTextInput = isTextInput || target instanceof win.HTMLInputElement && !nonTextInputTypes.has(target?.type) || target instanceof win.HTMLTextAreaElement || target instanceof win.HTMLElement && target.isContentEditable;\n  return !(isTextInput && modality === \"keyboard\" && e instanceof win.KeyboardEvent && !Reflect.has(FOCUS_VISIBLE_INPUT_KEYS, e.key));\n}\nvar currentModality = null;\nvar changeHandlers = /* @__PURE__ */ new Set();\nvar listenerMap = /* @__PURE__ */ new Map();\nvar hasEventBeforeFocus = false;\nvar hasBlurredWindowRecently = false;\nvar FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\nfunction triggerChangeHandlers(modality, e) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\nfunction handleKeyboardEvent(e) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = \"keyboard\";\n    triggerChangeHandlers(\"keyboard\", e);\n  }\n}\nfunction handlePointerEvent(e) {\n  currentModality = \"pointer\";\n  if (e.type === \"mousedown\" || e.type === \"pointerdown\") {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers(\"pointer\", e);\n  }\n}\nfunction handleClickEvent(e) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = \"virtual\";\n  }\n}\nfunction handleFocusEvent(e) {\n  const target = getEventTarget(e);\n  if (target === getWindow(target) || target === getDocument(target)) {\n    return;\n  }\n  if (!hasEventBeforeFocus && !hasBlurredWindowRecently) {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", e);\n  }\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = false;\n}\nfunction handleWindowBlur() {\n  hasEventBeforeFocus = false;\n  hasBlurredWindowRecently = true;\n}\nfunction setupGlobalFocusEvents(root) {\n  if (typeof window === \"undefined\" || listenerMap.get(getWindow(root))) {\n    return;\n  }\n  const win = getWindow(root);\n  const doc = getDocument(root);\n  let focus = win.HTMLElement.prototype.focus;\n  function patchedFocus() {\n    currentModality = \"virtual\";\n    triggerChangeHandlers(\"virtual\", null);\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  }\n  Object.defineProperty(win.HTMLElement.prototype, \"focus\", {\n    configurable: true,\n    value: patchedFocus\n  });\n  doc.addEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.addEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.addEventListener(\"click\", handleClickEvent, true);\n  win.addEventListener(\"focus\", handleFocusEvent, true);\n  win.addEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.addEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.addEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.addEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.addEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.addEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.addEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  win.addEventListener(\n    \"beforeunload\",\n    () => {\n      tearDownWindowFocusTracking(root);\n    },\n    { once: true }\n  );\n  listenerMap.set(win, { focus });\n}\nvar tearDownWindowFocusTracking = (root, loadListener) => {\n  const win = getWindow(root);\n  const doc = getDocument(root);\n  if (!listenerMap.has(win)) {\n    return;\n  }\n  win.HTMLElement.prototype.focus = listenerMap.get(win).focus;\n  doc.removeEventListener(\"keydown\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"keyup\", handleKeyboardEvent, true);\n  doc.removeEventListener(\"click\", handleClickEvent, true);\n  win.removeEventListener(\"focus\", handleFocusEvent, true);\n  win.removeEventListener(\"blur\", handleWindowBlur, false);\n  if (typeof win.PointerEvent !== \"undefined\") {\n    doc.removeEventListener(\"pointerdown\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointermove\", handlePointerEvent, true);\n    doc.removeEventListener(\"pointerup\", handlePointerEvent, true);\n  } else {\n    doc.removeEventListener(\"mousedown\", handlePointerEvent, true);\n    doc.removeEventListener(\"mousemove\", handlePointerEvent, true);\n    doc.removeEventListener(\"mouseup\", handlePointerEvent, true);\n  }\n  listenerMap.delete(win);\n};\nfunction getInteractionModality() {\n  return currentModality;\n}\nfunction setInteractionModality(modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\nfunction trackInteractionModality(props) {\n  const { onChange, root } = props;\n  setupGlobalFocusEvents(root);\n  onChange({ modality: currentModality });\n  const handler = () => onChange({ modality: currentModality });\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\nfunction isFocusVisible() {\n  return currentModality === \"keyboard\";\n}\nfunction trackFocusVisible(props = {}) {\n  const { isTextInput, autoFocus, onChange, root } = props;\n  setupGlobalFocusEvents(root);\n  onChange?.({ isFocusVisible: autoFocus || isFocusVisible(), modality: currentModality });\n  const handler = (modality, e) => {\n    if (!isKeyboardFocusEvent(!!isTextInput, modality, e)) return;\n    onChange?.({ isFocusVisible: isFocusVisible(), modality });\n  };\n  changeHandlers.add(handler);\n  return () => {\n    changeHandlers.delete(handler);\n  };\n}\n\nexport { getInteractionModality, isFocusVisible, listenerMap, setInteractionModality, trackFocusVisible, trackInteractionModality };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}