{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Downloads\\\\ADR\\\\ADR\\\\Frontend\\\\inmobiliaria-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropiedadesList from './components/PropiedadesList';\nimport AuthForm from './components/AuthForm';\nimport ImageCarousel from './components/ImageCarousel.js';\nimport './App.css';\nimport logo from './imagenes/logo.png';\n\n// Importa tus imágenes para el carrusel aquí\n// Asegúrate de que las rutas y nombres de archivo coincidan con tus imágenes reales\nimport carouselImage1 from './imagenes/imagen1.jpg'; // Cambia 'imagen1.png' por el nombre de tu archivo\nimport carouselImage2 from './imagenes/imagen2.jpg'; // Cambia 'imagen2.png' por el nombre de tu archivo\nimport carouselImage3 from './imagenes/imagen3.jpg'; // Cambia 'imagen3.png' por el nombre de tu archivo\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showAuthForm, setShowAuthForm] = useState(false);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [carouselImages, setCarouselImages] = useState([]);\n\n  // Ya no necesitas la clave de Unsplash ni el fetch, así que puedes quitarlo o comentarlo.\n  // const UNSPLASH_ACCESS_KEY = 'TU_ACCES_KEY_DE_UNSPLASH';\n\n  useEffect(() => {\n    // Verifica si hay un token de autenticación en el almacenamiento local al cargar la aplicación.\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n\n    // Aquí es donde asignas tus imágenes importadas al estado del carrusel.\n    setCarouselImages([carouselImage1, carouselImage2, carouselImage3]);\n\n    // La lógica de Unsplash se elimina, por lo tanto, la dependencia UNSPLASH_ACCESS_KEY ya no es necesaria.\n  }, []); // El array de dependencias está vacío porque las imágenes son estáticas.\n\n  // Maneja el éxito de la autenticación o registro.\n  const handleAuthSuccess = () => {\n    setIsAuthenticated(true);\n    setShowAuthForm(false); // Cierra el formulario de autenticación/registro.\n  };\n\n  // Maneja la cancelación del formulario de autenticación/registro.\n  const handleAuthCancel = () => {\n    setShowAuthForm(false);\n    setIsRegistering(false); // Restablece el estado de registro.\n  };\n\n  // Maneja el cierre de sesión del usuario.\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Elimina el token del almacenamiento local.\n    setIsAuthenticated(false); // Actualiza el estado de autenticación.\n    alert('Has cerrado sesión exitosamente.');\n  };\n\n  // Maneja la apertura del formulario de registro de un nuevo usuario.\n  const handleOpenRegisterForm = () => {\n    // Si el usuario ya está autenticado, puede registrar un nuevo usuario.\n    if (isAuthenticated) {\n      setShowAuthForm(true);\n      setIsRegistering(true); // Establece el formulario en modo registro.\n    } else {\n      // Si el usuario no está autenticado, se le pide que inicie sesión primero.\n      alert('Para registrar nuevas cuentas, debes iniciar sesión como un usuario existente.');\n      setShowAuthForm(true);\n      setIsRegistering(false); // Se muestra el formulario de inicio de sesión.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo de la Inmobiliaria\",\n        className: \"app-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-buttons\",\n        children: isAuthenticated ?\n        /*#__PURE__*/\n        // Si el usuario está autenticado, se muestran los botones para registrar nuevo usuario y cerrar sesión.\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleOpenRegisterForm,\n            className: \"btn-register-new-user\",\n            children: \"Registrar Nuevo Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            className: \"btn-logout\",\n            children: \"Cerrar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Si el usuario no está autenticado, solo se muestra el botón para iniciar sesión.\n        _jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setShowAuthForm(true);\n              setIsRegistering(false);\n            },\n            className: \"btn-login primary-login-btn\",\n            children: \"Iniciar Sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [carouselImages.length > 0 && /*#__PURE__*/_jsxDEV(ImageCarousel, {\n        images: carouselImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(PropiedadesList, {\n        isAuthenticated: isAuthenticated,\n        setShowAuthForm: setShowAuthForm,\n        setIsRegistering: setIsRegistering\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), showAuthForm && /*#__PURE__*/_jsxDEV(AuthForm, {\n      onAuthSuccess: handleAuthSuccess,\n      onCancel: handleAuthCancel,\n      isRegister: isRegistering // Pasa el estado para saber si es registro o inicio de sesión.\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"u019ycC/mQP14eXprCwxAuIe8RU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PropiedadesList","AuthForm","ImageCarousel","logo","carouselImage1","carouselImage2","carouselImage3","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","showAuthForm","setShowAuthForm","isRegistering","setIsRegistering","carouselImages","setCarouselImages","token","localStorage","getItem","handleAuthSuccess","handleAuthCancel","handleLogout","removeItem","alert","handleOpenRegisterForm","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","images","onAuthSuccess","onCancel","isRegister","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/Downloads/ADR/ADR/Frontend/inmobiliaria-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropiedadesList from './components/PropiedadesList';\nimport AuthForm from './components/AuthForm';\nimport ImageCarousel from './components/ImageCarousel.js';\nimport './App.css';\nimport logo from './imagenes/logo.png';\n\n// Importa tus imágenes para el carrusel aquí\n// Asegúrate de que las rutas y nombres de archivo coincidan con tus imágenes reales\nimport carouselImage1 from './imagenes/imagen1.jpg'; // Cambia 'imagen1.png' por el nombre de tu archivo\nimport carouselImage2 from './imagenes/imagen2.jpg'; // Cambia 'imagen2.png' por el nombre de tu archivo\nimport carouselImage3 from './imagenes/imagen3.jpg'; // Cambia 'imagen3.png' por el nombre de tu archivo\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showAuthForm, setShowAuthForm] = useState(false);\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [carouselImages, setCarouselImages] = useState([]);\n\n  // Ya no necesitas la clave de Unsplash ni el fetch, así que puedes quitarlo o comentarlo.\n  // const UNSPLASH_ACCESS_KEY = 'TU_ACCES_KEY_DE_UNSPLASH';\n\n  useEffect(() => {\n    // Verifica si hay un token de autenticación en el almacenamiento local al cargar la aplicación.\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n\n    // Aquí es donde asignas tus imágenes importadas al estado del carrusel.\n    setCarouselImages([carouselImage1, carouselImage2, carouselImage3]);\n\n    // La lógica de Unsplash se elimina, por lo tanto, la dependencia UNSPLASH_ACCESS_KEY ya no es necesaria.\n  }, []); // El array de dependencias está vacío porque las imágenes son estáticas.\n\n  // Maneja el éxito de la autenticación o registro.\n  const handleAuthSuccess = () => {\n    setIsAuthenticated(true);\n    setShowAuthForm(false); // Cierra el formulario de autenticación/registro.\n  };\n\n  // Maneja la cancelación del formulario de autenticación/registro.\n  const handleAuthCancel = () => {\n    setShowAuthForm(false);\n    setIsRegistering(false); // Restablece el estado de registro.\n  };\n\n  // Maneja el cierre de sesión del usuario.\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Elimina el token del almacenamiento local.\n    setIsAuthenticated(false); // Actualiza el estado de autenticación.\n    alert('Has cerrado sesión exitosamente.');\n  };\n\n  // Maneja la apertura del formulario de registro de un nuevo usuario.\n  const handleOpenRegisterForm = () => {\n    // Si el usuario ya está autenticado, puede registrar un nuevo usuario.\n    if (isAuthenticated) {\n      setShowAuthForm(true);\n      setIsRegistering(true); // Establece el formulario en modo registro.\n    } else {\n      // Si el usuario no está autenticado, se le pide que inicie sesión primero.\n      alert('Para registrar nuevas cuentas, debes iniciar sesión como un usuario existente.');\n      setShowAuthForm(true);\n      setIsRegistering(false); // Se muestra el formulario de inicio de sesión.\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <img src={logo} alt=\"Logo de la Inmobiliaria\" className=\"app-logo\" />\n        <div className=\"auth-buttons\">\n          {isAuthenticated ? (\n            // Si el usuario está autenticado, se muestran los botones para registrar nuevo usuario y cerrar sesión.\n            <>\n              <button onClick={handleOpenRegisterForm} className=\"btn-register-new-user\">\n                Registrar Nuevo Usuario\n              </button>\n              <button onClick={handleLogout} className=\"btn-logout\">\n                Cerrar Sesión\n              </button>\n            </>\n          ) : (\n            // Si el usuario no está autenticado, solo se muestra el botón para iniciar sesión.\n            <>\n              <button onClick={() => { setShowAuthForm(true); setIsRegistering(false); }} className=\"btn-login primary-login-btn\">\n                Iniciar Sesión\n              </button>\n            </>\n          )}\n        </div>\n      </header>\n      <main>\n        {/* Renderiza el carrusel de imágenes si hay imágenes cargadas. */}\n        {carouselImages.length > 0 && <ImageCarousel images={carouselImages} />}\n        {/* Renderiza la lista de propiedades, pasando el estado de autenticación y funciones para mostrar formularios. */}\n        <PropiedadesList\n          isAuthenticated={isAuthenticated}\n          setShowAuthForm={setShowAuthForm}\n          setIsRegistering={setIsRegistering}\n        />\n      </main>\n\n      {/* Renderiza el formulario de autenticación/registro si showAuthForm es verdadero. */}\n      {showAuthForm && (\n        <AuthForm\n          onAuthSuccess={handleAuthSuccess}\n          onCancel={handleAuthCancel}\n          isRegister={isRegistering} // Pasa el estado para saber si es registro o inicio de sesión.\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,qBAAqB;;AAEtC;AACA;AACA,OAAOC,cAAc,MAAM,wBAAwB,CAAC,CAAC;AACrD,OAAOC,cAAc,MAAM,wBAAwB,CAAC,CAAC;AACrD,OAAOC,cAAc,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA;;EAEAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMsB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTP,kBAAkB,CAAC,IAAI,CAAC;IAC1B;;IAEA;IACAM,iBAAiB,CAAC,CAAChB,cAAc,EAAEC,cAAc,EAAEC,cAAc,CAAC,CAAC;;IAEnE;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMkB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BV,kBAAkB,CAAC,IAAI,CAAC;IACxBE,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7BT,eAAe,CAAC,KAAK,CAAC;IACtBE,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzBJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCb,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3Bc,KAAK,CAAC,kCAAkC,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnC;IACA,IAAIhB,eAAe,EAAE;MACnBG,eAAe,CAAC,IAAI,CAAC;MACrBE,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM;MACL;MACAU,KAAK,CAAC,gFAAgF,CAAC;MACvFZ,eAAe,CAAC,IAAI,CAAC;MACrBE,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC;EAED,oBACEV,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAKwB,GAAG,EAAE7B,IAAK;QAAC8B,GAAG,EAAC,yBAAyB;QAACH,SAAS,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrE7B,OAAA;QAAKsB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BlB,eAAe;QAAA;QACd;QACAL,OAAA,CAAAE,SAAA;UAAAqB,QAAA,gBACEvB,OAAA;YAAQ8B,OAAO,EAAET,sBAAuB;YAACC,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAE3E;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7B,OAAA;YAAQ8B,OAAO,EAAEZ,YAAa;YAACI,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAEtD;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eACT,CAAC;QAAA;QAEH;QACA7B,OAAA,CAAAE,SAAA;UAAAqB,QAAA,eACEvB,OAAA;YAAQ8B,OAAO,EAAEA,CAAA,KAAM;cAAEtB,eAAe,CAAC,IAAI,CAAC;cAAEE,gBAAgB,CAAC,KAAK,CAAC;YAAE,CAAE;YAACY,SAAS,EAAC,6BAA6B;YAAAC,QAAA,EAAC;UAEpH;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC,gBACT;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACT7B,OAAA;MAAAuB,QAAA,GAEGZ,cAAc,CAACoB,MAAM,GAAG,CAAC,iBAAI/B,OAAA,CAACN,aAAa;QAACsC,MAAM,EAAErB;MAAe;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEvE7B,OAAA,CAACR,eAAe;QACda,eAAe,EAAEA,eAAgB;QACjCG,eAAe,EAAEA,eAAgB;QACjCE,gBAAgB,EAAEA;MAAiB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGNtB,YAAY,iBACXP,OAAA,CAACP,QAAQ;MACPwC,aAAa,EAAEjB,iBAAkB;MACjCkB,QAAQ,EAAEjB,gBAAiB;MAC3BkB,UAAU,EAAE1B,aAAc,CAAC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CArGQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAuGZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}