{"ast":null,"code":"'use client';\n\nimport * as passwordInput from '@zag-js/password-input';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useFieldContext } from '../field/use-field-context.js';\nconst usePasswordInput = props => {\n  const id = useId();\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const field = useFieldContext();\n  const machineProps = {\n    id,\n    ids: {\n      input: field?.ids.control\n    },\n    disabled: field?.disabled,\n    readOnly: field?.readOnly,\n    required: field?.required,\n    invalid: field?.invalid,\n    dir,\n    getRootNode,\n    ...props\n  };\n  const service = useMachine(passwordInput.machine, machineProps);\n  return passwordInput.connect(service, normalizeProps);\n};\nexport { usePasswordInput };","map":{"version":3,"names":["passwordInput","useMachine","normalizeProps","useId","useEnvironmentContext","useLocaleContext","useFieldContext","usePasswordInput","props","id","getRootNode","dir","field","machineProps","ids","input","control","disabled","readOnly","required","invalid","service","machine","connect"],"sources":["/Users/sofia-kalpin/Documents/Facu/ADR/Frontend/inmobiliaria-frontend/node_modules/@ark-ui/react/dist/components/password-input/use-password-input.js"],"sourcesContent":["'use client';\nimport * as passwordInput from '@zag-js/password-input';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useFieldContext } from '../field/use-field-context.js';\n\nconst usePasswordInput = (props) => {\n  const id = useId();\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const field = useFieldContext();\n  const machineProps = {\n    id,\n    ids: {\n      input: field?.ids.control\n    },\n    disabled: field?.disabled,\n    readOnly: field?.readOnly,\n    required: field?.required,\n    invalid: field?.invalid,\n    dir,\n    getRootNode,\n    ...props\n  };\n  const service = useMachine(passwordInput.machine, machineProps);\n  return passwordInput.connect(service, normalizeProps);\n};\n\nexport { usePasswordInput };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,aAAa,MAAM,wBAAwB;AACvD,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAClC,MAAMC,EAAE,GAAGN,KAAK,CAAC,CAAC;EAClB,MAAM;IAAEO;EAAY,CAAC,GAAGN,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEO;EAAI,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EAClC,MAAMO,KAAK,GAAGN,eAAe,CAAC,CAAC;EAC/B,MAAMO,YAAY,GAAG;IACnBJ,EAAE;IACFK,GAAG,EAAE;MACHC,KAAK,EAAEH,KAAK,EAAEE,GAAG,CAACE;IACpB,CAAC;IACDC,QAAQ,EAAEL,KAAK,EAAEK,QAAQ;IACzBC,QAAQ,EAAEN,KAAK,EAAEM,QAAQ;IACzBC,QAAQ,EAAEP,KAAK,EAAEO,QAAQ;IACzBC,OAAO,EAAER,KAAK,EAAEQ,OAAO;IACvBT,GAAG;IACHD,WAAW;IACX,GAAGF;EACL,CAAC;EACD,MAAMa,OAAO,GAAGpB,UAAU,CAACD,aAAa,CAACsB,OAAO,EAAET,YAAY,CAAC;EAC/D,OAAOb,aAAa,CAACuB,OAAO,CAACF,OAAO,EAAEnB,cAAc,CAAC;AACvD,CAAC;AAED,SAASK,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}